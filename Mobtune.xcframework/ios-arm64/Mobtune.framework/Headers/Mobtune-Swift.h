// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef MOBTUNE_SWIFT_H
#define MOBTUNE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Mobtune",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


/// 각 이벤트 객체의 기본형
SWIFT_CLASS("_TtC7Mobtune10EventParam")
@interface EventParam : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class ProductItem;

/// 장바구니 정보를 담는 객체
SWIFT_CLASS("_TtC7Mobtune8CartData")
@interface CartData : EventParam
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 장바구니 객체 생성자
/// \param cartID 장바구니 ID
///
/// \param products 장바구니에 담긴 상품 목록
///
- (nonnull instancetype)initWithCartID:(NSString * _Nullable)cartID products:(NSArray<ProductItem *> * _Nonnull)products OBJC_DESIGNATED_INITIALIZER;
@end


@class WKWebViewConfiguration;

/// Mobtune SDK 기본 관리 클래스.
SWIFT_CLASS("_TtC7Mobtune7Mobtune")
@interface Mobtune : NSObject
/// SDK를 초기화 시켜 준다.
/// \param appKey 발급받은 App Key
///
+ (void)configureWithAppKey:(NSString * _Nonnull)appKey;
/// DeepLink를 확인한다.  추적중인 DeepLink인 경우 관리자 페이지에서 통계를 확인할 수 있다.
/// \param linkUrl 앱 진입에 사용된 DeepLink URL
///
+ (void)setDeepLinkWithLinkUrl:(NSString * _Nonnull)linkUrl;
/// 하이브리드 등 앱내에서 웹을 통해 화면 이동등의 추적이 필요한 경우 본 function을 통해 반환받은 WKWebViewConfiguration을 WKWebView에 설정하여 준다.
///
/// returns:
/// 생성된 WKWebViewConfiguration 객체를 반환한다.
+ (WKWebViewConfiguration * _Nonnull)getConfiguration SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 이벤트 타입값
/// <ul>
///   <li>
///     ORDER : 결제
///   </li>
///   <li>
///     SIGNIN : 로그인
///   </li>
///   <li>
///     SIGNUP : 회원가입
///   </li>
///   <li>
///     ACCOUNTDELETED : 회원 탈퇴
///   </li>
///   <li>
///     SHOPPINGCART : 장바구니
///   </li>
///   <li>
///     ORDERCANCEL : 결제취소
///   </li>
///   <li>
///     ACCOUNTMODIFIED : 회원정보 수정
///   </li>
///   <li>
///     PRODUCTVIEWED : 본상품
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, MobtuneEvent, open) {
  MobtuneEventORDER = 0,
  MobtuneEventSIGNIN = 1,
  MobtuneEventSIGNUP = 2,
  MobtuneEventACCOUNTDELETED = 3,
  MobtuneEventSHOPPINGCART = 4,
  MobtuneEventORDERCANCEL = 5,
  MobtuneEventACCOUNTMODIFIED = 6,
  MobtuneEventPRODUCTVIEWED = 7,
};


/// 결제 취소 정보를 담는 객체
SWIFT_CLASS("_TtC7Mobtune15OrderCancelData")
@interface OrderCancelData : EventParam
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// 결제 방법별 설정값
/// <ul>
///   <li>
///     CREDICTCARD : 카드
///   </li>
///   <li>
///     BANKTRANSFER : 계좌이체
///   </li>
///   <li>
///     MOBILEPAYMENT : 모바일 결제
///   </li>
///   <li>
///     ETC : 기타
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, PaymentMethod, open) {
  PaymentMethodCREDICTCARD = 1,
  PaymentMethodBANKTRANSFER = 2,
  PaymentMethodMOBILEPAYMENT = 3,
  PaymentMethodETC = 4,
};


/// 결제한 상품 정보를 담는 객체
SWIFT_CLASS("_TtC7Mobtune11ProductInfo")
@interface ProductInfo : EventParam
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 결제한 상품 객체 생성자
/// \param orderID 주문번호
///
/// \param items 상품정보
///
/// \param totalPrice 결제 금액(합계)
///
/// \param method 결제 방법
///
- (nonnull instancetype)initWithOrderID:(NSString * _Nonnull)orderID items:(NSArray<ProductItem *> * _Nonnull)items totalPrice:(NSString * _Nonnull)totalPrice method:(enum PaymentMethod)method OBJC_DESIGNATED_INITIALIZER;
@end


/// 상품 정보를 담는 객체
SWIFT_CLASS("_TtC7Mobtune11ProductItem")
@interface ProductItem : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 본 상품
SWIFT_CLASS("_TtC7Mobtune15ProductViewItem")
@interface ProductViewItem : EventParam
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// 사용자 계정 정보를 담는 객체
SWIFT_CLASS("_TtC7Mobtune15UserAccountData")
@interface UserAccountData : EventParam
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 계정 정보 객체 생성자
/// \param userID 유져 ID
///
- (nonnull instancetype)initWithUserID:(NSString * _Nonnull)userID OBJC_DESIGNATED_INITIALIZER;
@end



/// 사용자 정보를 담는 객체, UserAccountData를 상속 받는다.
SWIFT_CLASS("_TtC7Mobtune12UserInfoData")
@interface UserInfoData : UserAccountData
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 사용자 정보를 담는 객체 생성자
/// \param userID 사용자 ID
///
/// \param userName 이름
///
/// \param nickName 별명
///
/// \param gender 성별.  남성인 경우 ‘M’, 여성인 경우 ‘F’, 그 외의 경우 ‘N’
///
/// \param birth 생년월일
///
/// \param phoneNo 휴대전화 번호
///
/// \param email 이메일
///
/// \param address 주소
///
/// \param marry 결혼여부. 결혼한 경우 ‘Y’, 그 외의 경우 ‘N’
///
- (nonnull instancetype)initWithUserID:(NSString * _Nonnull)userID userName:(NSString * _Nullable)userName nickName:(NSString * _Nullable)nickName gender:(NSString * _Nullable)gender birth:(NSString * _Nullable)birth phoneNo:(NSString * _Nullable)phoneNo email:(NSString * _Nonnull)email address:(NSString * _Nullable)address marry:(NSString * _Nullable)marry OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithUserID:(NSString * _Nonnull)userID SWIFT_UNAVAILABLE;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
